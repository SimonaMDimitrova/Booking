@model Booking.Web.InputModels.PropertiesInputModels.Add.AddPropertyInputModel
@{
    this.ViewData["Title"] = "Create a property";
    var countries = this.Model.Countries.Select(x => new SelectListItem(x.Value, x.Key));
    var propertyCategories = this.Model.PropertyCategories.Select(x => new SelectListItem(x.Value, x.Key));
}

<div class="row">
    <form method="post" class="row margin-bottom" enctype="multipart/form-data">
        <h2 class="h2 text-center">@this.ViewData["Title"]</h2>
        <div class="col-md-6">
            <hr />
            <h4 class="h4-padding">Property information</h4>
            <hr />
            <div class="form-group">
                <label asp-for="Name"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PropertyRating"></label>
                <select asp-for="PropertyRating" class="form-control">
                    <option value="0">None</option>
                    <option value="1">1 Star</option>
                    @for (int i = 2; i <= 5; i++)
                    {
                        <option value="@i">@i Stars</option>
                    }
                </select>
                <span asp-validation-for="PropertyRating" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CountryId"></label>
                <select id="countriesId" asp-for="CountryId" class="form-control" asp-items="countries">
                    <option value="0">Choose a country ...</option>
                </select>
                <span asp-validation-for="CountryId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TownId"></label>
                <select id="townsId" asp-for="TownId" class="form-control">
                    <option value="0">Choose a country first ...</option>
                </select>
                <span asp-validation-for="TownId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PropertyCategoryId"></label>
                <select asp-for="PropertyCategoryId" class="form-control" asp-items="propertyCategories">
                    <option value="0">Choose a property category ...</option>
                </select>
                <span asp-validation-for="PropertyCategoryId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Floors"></label>
                <input asp-for="Floors" class="form-control" />
                <span asp-validation-for="Floors" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Images"></label>
                <input asp-for="Images" class="form-control" />
                <span asp-validation-for="Images" class="text-danger"></span>
            </div>
            <hr />
        </div>
        <div class="col-md-6">
            <hr />
            <h4 class="h4-padding">Description</h4>
            <hr />
            <div class="form-group">
                <textarea class="form-control description" asp-for="Description" cols="10"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <hr />
            <h4 class="h4-padding">General Facilities</h4>
            <hr />
            <div class="form-group row">
                @foreach (var facility in Model.Facilities)
                {
                    <div class="col-md-6">
                        @if (Model.FacilitiesIds != null && Model.FacilitiesIds.Contains(facility.Id))
                        {
                            <input id="facility_@facility.Id"
                               type="checkbox"
                               name="FacilitiesIds"
                               checked
                               value="@facility.Id" />
                        }
                        else
                        {
                            <input id="facility_@facility.Id"
                               type="checkbox"
                               name="FacilitiesIds"
                               value="@facility.Id" />
                        }

                        <label for="facility_@facility.Id">@facility.Name</label>
                    </div>
                }
            </div>
            <hr />
            <h4 class="h4-padding">What do you allow? (Property rules)</h4>
            <hr />
            <div class="form-group row">
                @foreach (var rule in Model.Rules)
                {
                <div class="col-md-6">
                    @if (Model.RulesIds != null && Model.RulesIds.Contains(rule.Id))
                    {
                        <input id="rule_@rule.Id"
                               type="checkbox"
                               name="RulesIds"
                               checked
                               value="@rule.Id" />
                    }
                    else
                    {
                        <input id="rule_@rule.Id"
                               type="checkbox"
                               name="RulesIds"
                               value="@rule.Id" />
                    }

                    <label for="rule_@rule.Id">@rule.Name</label>
                </div>
                }
            </div>
            <hr />
        </div>
        <div class="col-md-12">
            <input type="submit" class="book-btn text-center" value="Create" />
        </div>
    </form>
</div>

@section Scripts {
    <script src="~/assets/js/ajax-countries-towns.js"></script>
    <script>
        var countriesSelection = document.getElementById('countriesId');
        countriesSelection.value = @Model.CountryId;
        var countryId = @Model.CountryId;
        let currency = document.getElementById("currencyId");

        let option = document.createElement("option");
        option.text = @Model.TownId;
        option.value = @Model.TownId;

        let xhr = new XMLHttpRequest();

        xhr.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                let townsDropdown = document.getElementById('townsId');
                if (countryId != 0) {
                    townsDropdown[0].innerText = 'Choose a town ...';

                    var towns = JSON.parse(this.responseText);
                    for (let i = 0; i < towns.length; i++) {
                        let town = towns[i];
                        let option = document.createElement("option");
                        option.text = town.value;
                        option.value = town.key;
                        townsDropdown.add(option);
                    }

                    townsDropdown.value = @Model.TownId;
                }
            }
        };
        xhr.open("GET", `/Home/GetTowns/${countryId}`);
        xhr.send();
    </script>
}