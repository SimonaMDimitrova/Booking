@model Booking.Web.ViewModels.Offers.Add.AddOfferInputModel
@inject Booking.Services.IDictionariesService dictionariesService
@{
    this.ViewData["Title"] = "Add an offer";
}

<div class="row">
    <h2 class="h2 text-center">Add an offer *</h2>
    <form method="post" class="row margin-bottom" enctype="multipart/form-data">
        <div class="col-md-6">
            <hr />
            <h4 class="h4-padding">Offer information</h4>
            <hr />
            <div class="form-group">
                <label asp-for="ValidFrom"></label>
                <input type="date" asp-for="ValidFrom" class="form-control" />
                <span asp-validation-for="ValidFrom" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ValidTo"></label>
                <input type="date" asp-for="ValidTo" class="form-control" />
                <span asp-validation-for="ValidTo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PricePerPerson">Price per person - @Model.CurrencyCode</label>
                <input asp-for="PricePerPerson" class="form-control" />
                <span asp-validation-for="PricePerPerson" class="text-danger"></span>
            </div>
            <hr />
            <h4 class="h4-padding">Sleeping places</h4>
            <hr />
            <div class="form-group">
                @{
                    var index = 0;
                    foreach (var bedType in Model.BedTypes)
                    {
                        if (Model.BedTypesCounts != null && Model.BedTypesCounts.Any())
                        {
                            <div class="col-md-3">
                                <label for="bedType_@bedType.Key">@bedType.Value</label>
                                <input id="bedType_@bedType.Key"
                                       class="form-control"
                                       type="number"
                                       name="BedTypesCounts"
                                       value=@Model.BedTypesCounts.ToList()[index] />
                            </div>
                        }
                        else
                        {
                            <div class="col-md-3">
                                <label for="bedType_@bedType.Key">@bedType.Value</label>
                                <input id="bedType_@bedType.Key"
                                       class="form-control"
                                       type="number"
                                       name="BedTypesCounts"
                                       value="0" />
                            </div>
                        }

                        index++;
                    }
                }
                <span asp-validation-for="BedTypesCounts" class="text-danger"></span>
            </div>
            <hr />
            <div class="form-group">
                <label asp-for="Images"></label>
                <input asp-for="Images" class="form-control" />
                <span asp-validation-for="Images" class="text-danger"></span>
            </div>
            <hr />
            <div class="form-group">
                <label asp-for="Count"></label>
                <input asp-for="Count" class="form-control" />
                <span asp-validation-for="Count" class="text-danger"></span>
            </div>
            <hr />
        </div>
        <div class="col-md-6">
            @{
                var facilities = dictionariesService.CreateFacilitiesInput(Model.OfferFacilities);
                foreach (var facility in facilities)
                {
                    <hr />
                    <h4 class="h4-padding">@facility.Key</h4>
                    <hr />
                    <div class="form-group row">
                        @for (int i = 0; i < facility.Value.Count; i++)
                        {
                            var currentFacility = facility.Value[i];
                            <div class="col-md-6">
                                @if (Model.OfferFacilitiesIds != null && Model.OfferFacilitiesIds.Contains(currentFacility.Id))
                                {
                                    <input id="facility_@currentFacility.Id"
                                       type="checkbox"
                                       checked
                                       name="OfferFacilitiesIds"
                                       value="@currentFacility.Id" />
                                }
                                else
                                {
                                    <input id="facility_@currentFacility.Id"
                                       type="checkbox"
                                       name="OfferFacilitiesIds"
                                       value="@currentFacility.Id" />
                                }

                                <label for="facility_@currentFacility.Id">@currentFacility.Name</label>
                            </div>
                        }
                    </div>
                }
            }
            <hr />
            <input type="hidden" asp-for="PropertyId" />
        </div>
        <div class="col-md-12">
            <input type="submit" value="Add an offer" class="book-btn text-center" />
        </div>
    </form>
    *to property @Model.PropertyName
</div>