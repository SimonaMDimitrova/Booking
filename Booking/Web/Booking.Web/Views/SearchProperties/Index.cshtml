@model Booking.Web.ViewModels.Home.IndexInputModel
@inject Microsoft.AspNetCore.Identity.UserManager<Booking.Data.Models.ApplicationUser> UserManager
@{
    this.ViewData["Title"] = "Searched result";
    var countries = this.Model.Countries.Select(x => new SelectListItem(x.Value, x.Key));
}

<div class="row">
    <div class="col-md-3">
        <h3>Search</h3>
        <hr />
        <form method="get">
            <div class="form-group">
                <label>Destination</label>
                <select id="countriesId" asp-for="CountryId" class="form-control" asp-items="countries">
                    <option value="0">Choose a country ...</option>
                </select>
                <select id="townsId" asp-for="TownId" class="form-control">
                    <option value="0">Choose a country first ...</option>
                </select>
            </div>
            <div class="form-group">
                <label asp-for="CheckIn"></label>
                <input asp-for="CheckIn" type="date" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="CheckOut"></label>
                <input asp-for="CheckOut" type="date" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="Members"></label>
                <select id="membersId" asp-for="Members" class="form-control ">
                    <option value="1">1 Member</option>
                    @for (int i = 2; i <= 30; i++)
                    {
                        <option value="@i">@i Members</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label id="currencyId">Budget</label>
                <input asp-for="MinBudget" class="form-control" />
                <span>* min price per person</span>
                <input asp-for="MaxBudget" class="form-control" />
                <span>* max price per person</span>
            </div>
            <input type="submit" class="book-btn" value="Search" />
        </form>
    </div>
    <div class="col-md-9">
        <vc:search-results input="Model" user-email="@this.User.Identity.Name" />
    </div>
</div>

@section Scripts {
    <script src="~/assets/js/most-popular-towns.js"></script>
    <script>
        var countriesSelection = document.getElementById('countriesId');
        countriesSelection.value = @Model.CountryId;
        var countryId = @Model.CountryId;
        let currency = document.getElementById("currencyId");

        let option = document.createElement("option");
        option.text = @Model.TownId;
        option.value = @Model.TownId;

        let xhr = new XMLHttpRequest();

        xhr.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                let townsDropdown = document.getElementById('townsId');
                if (countryId != 0) {
                    townsDropdown[0].innerText = 'Choose a town ...';

                    var towns = JSON.parse(this.responseText);
                    for (let i = 0; i < towns.length; i++) {
                        let town = towns[i];
                        let option = document.createElement("option");
                        option.text = town.value;
                        option.value = town.key;
                        townsDropdown.add(option);
                    }

                    townsDropdown.value = @Model.TownId;
                    getCurrencyCode(currency, countryId);
                }
            }
        };
        xhr.open("GET", `/Home/GetMostPopularTowns/${countryId}`);
        xhr.send();

        function getCurrencyCode(currency, countryId) {
            let xhr = new XMLHttpRequest();

            xhr.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {
                    currency.innerText = `Budget-${this.responseText}`;
                }
            }
            xhr.open("GET", `/Home/GetCurrencyCode/${countryId.toString()}`);
            xhr.send();
        }
    </script>
}
